Qt for Python 6.6.0 is a minor release.

For more details, refer to the online documentation included in this
distribution. The documentation is also available online:

https://doc.qt.io/qtforpython/

Some of the changes listed in this file include issue tracking numbers
corresponding to tasks in the Qt Bug Tracker:

https://bugreports.qt.io/

Each of these identifiers can be entered in the bug tracker to obtain more
information about a particular change.

****************************************************************************
*                                  PySide6                                 *
****************************************************************************

 - The module QtGraphs has been added.
 - [PYSIDE-769]  A custom asyncio event loop based on Qt has been implemented.
 - [PYSIDE-1106] Documentation: The translation of code snippets from C++ to
                 Python has been improved.
 - [PYSIDE-1106] Documentation: The example gallery has been improved.
 - [PYSIDE-1106] Documentation: Markdown is now also supported for
                 example documentation.
 - [PYSIDE-1612] Android: Unity build is now enabled by default.
                 Qt Permissions API has been added for Android.
                 Auto download of Android NDK and SDK now possible with Android
                 wheel cross-compilation tool.
                 Full support for Qt modules now available on Android.
                 .js files are now supported when QML/Quick application
                 deployed to Android.
 - [PYSIDE-1735] The old enumerations have been removed.
 - [PYSIDE-1884] The __doc__ attribute is now used for signatures when
                 provided.
 - [PYSIDE-2206] Example improvements: removed macpasteboardmime, tabbed
                 browser and old statemachine examples;
                 updated camera, chart theme, DOM bookmarks, Bluetooth
                 heartrate game, Bluetooth lowenergyscanner, markdowneditor,
                 mapviewer, mdi, QML reference examples, quicknanobrowser
                 and scriptableapplication;
                 added document viewer, filesystemexplorer,
                 simplebrowser, statemachine moveblocks, screencapture,
                 Qt Graphs widgetgallery and widgetsnanobrowser.
 - [PYSIDE-2226] QLocale.toLong() has been fixed to properly return
                 a tuple (int, bool) rather than only int.
 - [PYSIDE-2235] Type hints: QObject.setParent() now accepts an Optional
                 object.
 - [PYSIDE-2272] Type hints: The signatures of the qmlRegister() functions
                 have been fixed.
 - [PYSIDE-2384] QWizardPage::registerField() taking a Signal instance
                 has been added.
 - [PYSIDE-2394] A deprecation warning about
                 QSqlQueryModel::setQuery(const QSqlQuery &) originating
                 from Qt / C++ has been removed.
 - [PYSIDE-2395] The signatures of QClipboard.setPixmap() and setImage()
                 have been fixed.
 - [PYSIDE-2402] Modules QtDBus and QtHttpServer have been enabled on Windows.
 - [PYSIDE-2415] QQmlComponent is now supported as a Property.
 - [PYSIDE-2417] Overflows when passing int to functions taking floats
                 have been fixed.
 - [PYSIDE-2442] QDataStream.writeRawData() now also takes bytes.
 - [PYSIDE-2471] The pyside6-project now also recognizes .pyw files as
                 Python files on Windows.
 - [PYSIDE-2473] Feature switching has been fixed to work with
                 unittest.mock.patch.dict.

 ***************************************************************************
*                                  Shiboken6                               *
****************************************************************************

 - Typesystem syntax: The attributes "allow-thread", "exception-handling"
   and "snake-case" can now be specified on <declare-function> and
   <function>.
-  The cast operators of libshiboken's class AutoDecRef have been
   deprecated and the class is now movable.
 - [PYSIDE-1790] Experimental support for rvalue references has been added.
 - [PYSIDE-2230] Initial support for Python 3.12 has been added.
 - [PYSIDE-2316] Correctly register smartpointer signatures
 - [PYSIDE-2394] It is now possible to override a C++ deprecation attribute
                 in the typesystem.
 - [PYSIDE-2446] More special functions of the number protocol have been
                 added, for example __int__, __float__ using operator int(),
                 operator double() as well as and __abs__ and __pow__.
 - [PYSIDE-2462] The __repr__ function of smart pointers has been improved
                 to show information on the pointee. Similarly, the dir()
                 of smart pointers now includes the entries of the pointee.
